{ // @author josuerom
  "read int": {
  "prefix": "rint",
  "body": [
    "${1:n} = int(input())"
  ],
  },
  "read str": {
  "prefix": "rstr",
  "body": [
   "${1:s} = input()"
  ],
  },
  "read decimal": {
  "prefix": "rfloat",
  "body": [
    "${1:d} = float(input())"
  ],
  },
  "read list of str": {
  "prefix": "rls",
  "body": [
    "ls = input().split(\" \")"
  ],
  },
  "read list of int": {
  "prefix": "rli",
  "body": [
    "li$1 = map(int, input().split())"
  ],
  },
  "read list of float": {
  "prefix": "rlf",
  "body": [
    "lf$1 = map(float, input().split())"
  ],
  },
  "read list of chars": {
  "prefix": "rlc",
  "body": [
    "lc$1 = input().split(\"\")"
  ],
  },
  "return False": {
  "prefix": "rtf",
  "body": [
    "return False"
  ],
  },
  "return True": {
  "prefix": "rtt",
  "body": [
    "return True"
  ],
  },
  "read test case 1": {
  "prefix": "tc",
  "body": [
    "tc = int(input())",
    "while tc > 0:",
    "\t$1",
    "\ttc -= 1"
  ],
  },
  "read test case 2": {
  "prefix": "tt",
  "body": [
    "tt = int(input())",
    "while tt > 0:",
    "\tsolve()",
    "\ttt -= 1"
  ],
  },
  "comment block": {
  "prefix": "cb",
  "body": [
    "\"\"\"",
    "$1",
    "\"\"\""
  ],
  },
  "print(normal)": {
  "prefix": "p",
  "body": [
    "print($1)"
  ],
  },
  "print(f-string)": {
  "prefix": "pp",
  "body": [
    "print(f\"$1\")"
  ],
  },
  "print(ternary operator)": {
  "prefix": "po",
  "body": [
    "print($2 if $1 else $3)"
  ],
  },
  "print(veredict YES or NO)": {
  "prefix": "pv",
  "body": [
    "print(\"YES\" if $1 else \"NO\")"
  ],
  },
  "ifel": {
  "prefix": "ifel",
  "body": [
    "if $1:",
    "\t",
    "else:",
    "\t"
  ],
  },
  "fori": {
  "prefix": "fori",
  "body": [
    "for ${1:i} in range(0, $2):",
    "\t$3"
  ],
  },
  "fore": {
  "prefix": "fore",
  "body": [
    "for e in enumerate(${1:list}):",
    "\t$2"
  ],
  },
  "while": {
  "prefix": "wh",
  "body": [
    "while $1:",
    "\t$2"
  ],
  },
  "File header": {
  "prefix": "header",
  "body": [
    "#  author: josuerom - created: ${CURRENT_DATE}/${CURRENT_MONTH}/${CURRENT_YEAR_SHORT} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}",
  ],
  },
  "template 1 cp": {
  "prefix": "tem1",
  "body": [
    "\"\"\"",
    "   author:  josuerom",
    "   created: ${CURRENT_DATE}/${CURRENT_MONTH}/${CURRENT_YEAR_SHORT} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}",
    "\"\"\"",
    "import sys\n",
    "def rli(): return list(map(int, sys.stdin.readline().split()))",
    "def rls(): return list(map(str, sys.stdin.readline().split(r\"\\s+\")))",
    "def rlc(): return sys.stdin.readline().strip()",
    "def rint(): return int(sys.stdin.readline())",
    "def pl(ls): print(' '.join(map(str, ls)))",
    "def plb(ls): print('\\n'.join(map(str, ls)))\n",
    "for _ in range(${1:rint()}):",
  ],
  },
  "template 2 free": {
  "prefix": "tem2",
  "body": [
    "#  author: josuerom - created: ${CURRENT_DATE}/${CURRENT_MONTH}/${CURRENT_YEAR_SHORT} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}",
  "$1"
  ],
  },
  "def precalculate()": {
  "prefix": "funpre",
  "body": [
    "def pre_calculate($1):",
    "\t"
  ],
  },
  "def solve()": {
  "prefix": "fsol",
  "body": [
    "def solve():",
    "\t$1",
  ],
  },
  "fun main()": {
  "prefix": "main",
  "body": [
    "if __name__ == '__main__':",
    "\t$1"
  ],
  },
}
